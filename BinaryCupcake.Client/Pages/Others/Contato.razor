@page "/contato"
<div class="container mt-5">
    <h2 class="text-center mb-4">Sobre o Projeto "BinaryCupcake"</h2>

    <p>
        <strong>BinaryCupcake</strong> é uma aplicação moderna e interativa desenvolvida com a tecnologia <strong>Blazor</strong> e o framework <strong>.NET MVC</strong>, com o objetivo de proporcionar uma experiência de usuário dinâmica e responsiva. O projeto foi criado como parte do curso de <strong>[Seu Curso]</strong> e visa explorar as vantagens do Blazor para o desenvolvimento de interfaces ricas e escaláveis em C#, utilizando a arquitetura MVC para promover uma organização robusta e de fácil manutenção.
    </p>

    <p>
        A aplicação permite que os usuários explorem uma variedade de <strong>cupcakes</strong> digitais, oferecendo uma interface intuitiva para navegar entre os produtos, realizar compras e acompanhar o histórico de pedidos. <strong>BinaryCupcake</strong> utiliza recursos modernos do Blazor, permitindo que a aplicação seja altamente interativa e responsiva sem a necessidade de recarregar a página, tudo isso com a performance e segurança oferecidas pelo <strong>.NET</strong>.
    </p>

    <p>
        Com o uso do padrão <strong>MVC</strong>, a aplicação foi estruturada de forma que o código seja modular e fácil de entender, o que facilita futuras melhorias e manutenções. A implementação do Blazor foi escolhida para explorar seu potencial na criação de interfaces interativas diretamente no navegador, utilizando C# ao invés de JavaScript.
    </p>

    <h3 class="mt-4">Tecnologias utilizadas:</h3>
    <ul>
        <li><strong>Blazor</strong>: Para criar interfaces de usuário dinâmicas e responsivas.</li>
        <li><strong>.NET MVC</strong>: Para uma arquitetura de software organizada e de fácil manutenção.</li>
        <li><strong>C#</strong>: Como linguagem principal de desenvolvimento.</li>
        <li><strong>Entity Framework</strong>: Para gerenciamento de dados e integração com banco de dados.</li>
    </ul>

    <p>
        O objetivo principal do <strong>BinaryCupcake</strong> é proporcionar uma experiência de compra agradável, ao mesmo tempo em que demonstra a eficácia das tecnologias <strong>Blazor</strong> e <strong>.NET</strong> para a criação de aplicações modernas e eficientes.
    </p>

    <hr class="my-5">

    <h3>Informações de Contato</h3>

    <p>Se você tiver alguma dúvida ou sugestão sobre o projeto **BinaryCupcake**, fique à vontade para entrar em contato conosco!</p>

    <!-- Formulário de Contato -->
    <EditForm Model="@contactForm" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="name" class="form-label">Nome</label>
            <InputText id="name" class="form-control" @bind-Value="contactForm.Name" />
        </div>

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <InputText id="email" class="form-control" @bind-Value="contactForm.Email" />
        </div>

        <div class="mb-3">
            <label for="message" class="form-label">Mensagem</label>
            <InputTextArea id="message" class="form-control" @bind-Value="contactForm.Message" />
        </div>

        <button type="submit" class="btn btn-primary">Enviar</button>
    </EditForm>

    @if (isSubmitted)
    {
        <div class="alert alert-success mt-3" role="alert">
            Sua mensagem foi enviada com sucesso! Entraremos em contato em breve.
        </div>
    }
</div>

@code {
    private ContactForm contactForm = new ContactForm();
    private bool isSubmitted = false;

    private void HandleSubmit()
    {
        // Aqui você pode adicionar a lógica para processar o formulário, como enviar por email ou armazenar em banco de dados.
        isSubmitted = true;
    }

    public class ContactForm
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string Message { get; set; }
    }
}