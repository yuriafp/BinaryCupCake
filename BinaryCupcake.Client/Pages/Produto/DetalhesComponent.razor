@page "/detalhes-produto/{id:int}"

<div class="container">
    @if (carregando)
    {
        <div class="d-flex justify-content-center align-items-center vh-100">
            <div class="spinner-border text-dark" role="status">
                <span class="visually-hidden">Carregando...</span>
            </div>
        </div>
    }
    else if (produto is not null)
    {
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6 col-12 mb-4 d-flex justify-content-center">
                <div class="card shadow-lg" style="width: 100%; max-width: 600px; height: auto; border-radius: 12px; overflow: hidden; transition: transform 0.3s ease, box-shadow 0.3s ease;">
                    <img src="@produto.Base64Img" class="card-img-top" style="max-height: 300px; object-fit: contain; width: 100%;" alt="@produto.Nome">
                    <div class="card-body p-3">
                        <h5 class="card-title text-center" style="font-weight: bold;">
                            @produto.Nome
                        </h5>
                        <p class="card-text text-center fs-6 text-muted">
                            @(produto.Preco.ToString("C2", System.Globalization.CultureInfo.GetCultureInfo("pt-BR")) ?? "Preço não disponível")
                        </p>

                        <p class="card-text fs-7" style="text-align: justify; overflow: hidden; text-overflow: ellipsis; white-space: normal; max-height: 150px; display: -webkit-box; -webkit-line-clamp: 5; -webkit-box-orient: vertical;">
                            @produto.Descricao
                        </p>

                        <div class="d-flex gap-3 justify-content-between mt-4">
                            <a href="/produtos" class="btn btn-dark btn-sm w-auto">Voltar</a>
                            <button class="btn btn-outline-dark btn-sm w-100" @onclick="() => AddCarrinho(produto, 1)">Adicionar ao carrinho!</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info">Produto não encontrado!</div>
    }
</div>

@code {
    [Parameter] public int id { get; set; }

    Produto produto = new();
    private bool carregando = true;

    protected override async Task OnInitializedAsync()
    {
        await ObterProdutoPorId();
        carregando = false;
    }

    private async Task ObterProdutoPorId()
    {
        produto = await ClientService.ObterProdutoPorId(id);
    }

    private async Task AddCarrinho(Produto produto, int quantidade = 1)
    {
        if (quantidade <= 0)
        {
            return;
        }

        var response = await carrinhoService.AddCarrinho(produto, quantidade);
    }
}
