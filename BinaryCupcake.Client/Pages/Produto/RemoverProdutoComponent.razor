@page "/remover-produto"
@using BinaryCupcake.SharedLibrary.Models

<AuthorizeView>
    <Authorized Context="adminContext">
        @if (adminContext.User.IsInRole("Admin"))
        {
            <div class="container-fluid">
                <h1 class="text-center my-4">Gestão - Remover Produto</h1>

                @if (carregando)
                {
                    <div class="d-flex justify-content-center align-items-center vh-100">
                        <div class="spinner-border text-dark" role="status">
                            <span class="visually-hidden">Carregando...</span>
                        </div>
                    </div>
                }
                else if (ListaTodosProdutos.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Nome</th>
                                    <th>Preço</th>
                                    <th>Quantidade</th>
                                    <th>Data Inserção</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var produto in ListaTodosProdutos)
                                {
                                    <tr>
                                        <td></td>
                                        <td>@produto.Nome</td>
                                        <td>@produto.Preco.ToString("C2", System.Globalization.CultureInfo.GetCultureInfo("pt-BR"))</td>
                                        <td>@produto.Quantidade</td>
                                        <td>@produto.Data.ToString("D")</td>
                                        <td class="text-center">
                                            <button class="btn btn-danger btn-sm" @onclick="() => RemoverProdutos(produto.Id)">Remover</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info text-center">Nenhum produto disponível para remover.</div>
                }
            </div>
        }
    </Authorized>

    <NotAuthorized>
        <div class="container text-center">
            <p>Você não tem permissão para acessar esta página.</p>
        </div>
    </NotAuthorized>
</AuthorizeView>

<MessageDialog @ref="messageDialog"></MessageDialog>

@code {
    private List<BinaryCupcake.SharedLibrary.Models.Produto> ListaTodosProdutos = new();
    private bool carregando = true;
    private MessageDialog? messageDialog;

    protected override async Task OnInitializedAsync()
    {
        ListaTodosProdutos = await ClientService.ListaTodosProdutos();
        carregando = false;
    }

    private async Task RemoverProdutos(int produtoId)
    {

        var confirmacao = await js.InvokeAsync<bool>("confirm", "Tem certeza que deseja remover este produto?");
        if (confirmacao)
        {
            var (success, message) = await ClientService.RemoverProduto(produtoId);
            if (success)
            {
                ListaTodosProdutos = await ClientService.ListaTodosProdutos();
                messageDialog!.SetDialogValues("success", "Produto removido com sucesso!");
            }
            else
            {
                messageDialog!.SetDialogValues("danger", message);
            }
            SetMessageDialog();
        }
    }

    public async void SetMessageDialog()
    {
        await messageDialog!.ShowMessage();
    }
}
