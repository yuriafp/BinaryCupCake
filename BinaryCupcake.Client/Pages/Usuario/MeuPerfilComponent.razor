@page "/perfil"
@inject NavigationManager NavigationManager
@inject AutenticacaoService autenticacaoService
@inject IUsuarioService usuarioService

@if (usuarioAutenticado)
{
    <div class="container">
        <h2>Perfil de Usuário</h2>
        <EditForm Model="usuario" OnValidSubmit="AtualizarUsuario">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="card">
                <div class="card-header">Informações do Perfil</div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="Nome" class="form-label">Nome:</label>
                        <InputText @bind-Value="usuario.Nome" id="Nome" class="form-control" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="Email" class="form-label">Email:</label>
                        <InputText @bind-Value="usuario.Email" id="Email" class="form-control" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="Endereco" class="form-label">Endereço:</label>
                        <InputTextArea @bind-Value="usuario.Endereco" id="Endereco" class="form-control" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="Senha" class="form-label">Senha:</label>
                        <InputText @bind-Value="usuario.Senha" id="Senha" class="form-control" type="password" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="ConfirmarSenha" class="form-label">Confirmar Senha:</label>
                        <InputText @bind-Value="usuario.ConfirmaSenha" id="ConfirmarSenha" class="form-control" type="password" />
                    </div>
                </div>
                <div class="card-footer" align="center">
                    @if(MostrarBtnSalvar){
                    <button class="btn btn-primary" type="submit">Atualizar Perfil</button>
                    }
                </div>
            </div>
        </EditForm>
    </div>
}
else
{
    <div class="container">
        <p>Você precisa estar autenticado para acessar esta página.</p>
    </div>
}

<BtnOcupadoComponent MostrarBtnOcupado="MostrarBtnOcupado"></BtnOcupadoComponent>
<MessageDialog @ref="messageDialogAtualizarPerfil"></MessageDialog>

@code {
    private UsuarioDTO usuario = new UsuarioDTO();
    private bool usuarioAutenticado = false;
    MessageDialog? messageDialogAtualizarPerfil;
    public bool MostrarBtnOcupado { get; set; }
    public bool MostrarBtnSalvar { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await ObterDetalhesUsuario();
    }

    private async Task ObterDetalhesUsuario()
    {
        var sessaoUsuario = await autenticacaoService.GetDetalhesUsuario();
        if (sessaoUsuario != null)
        {
            usuario = new UsuarioDTO
                {
                    Id = sessaoUsuario.Id,
                    Nome = sessaoUsuario.Nome,
                    Email = sessaoUsuario.Email,
                    Endereco = sessaoUsuario.Endereco
                };
            usuarioAutenticado = true;
        }
        else
        {
            usuarioAutenticado = false;
        }
    }

    private async Task AtualizarUsuario()
    {
        if (usuario.Senha != usuario.ConfirmaSenha)
        {
            messageDialogAtualizarPerfil!.SetDialogValues("danger", "As senhas não coincidem.");
            await SetMessageDialog();
            return;
        }

        var (flag, mensagem) = await usuarioService.AtualizarUsuarioPorId(usuario);
        if (flag)
            messageDialogAtualizarPerfil!.SetDialogValues("success", mensagem);
        else
            messageDialogAtualizarPerfil!.SetDialogValues("danger", mensagem);

        await SetMessageDialog();
    }

    async Task SetMessageDialog()
    {
        await messageDialogAtualizarPerfil!.ShowMessage();
        MostrarBtnOcupado = false;
        MostrarBtnSalvar = true;
        StateHasChanged();
    }
}
